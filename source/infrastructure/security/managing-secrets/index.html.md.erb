---
title: Managing secrets
---

# <%= current_page.data.title %>

<%= partial('partials/page_toc') %>

Azure Key Vault offers a secure and convenient way to store secrets required for application environments and infrastructure configuration.

## Key Vault
Create a resource group following the standard naming convention like `s146d01-rg` where `s146` is the project id, `d` is the development subscription (t for test and p for production)
and `01` is an identifier. This can be automated using [PowerShell](https://github.com/DFE-Digital/qualified-teachers-api/blob/main/azure/Set-ResourceGroup.ps1)
and an [ARM template](https://github.com/DFE-Digital/qualified-teachers-api/blob/main/azure/azuredeploy.json).

The resource group must have the mandatory tags associated with your subscription.

Create a Key Vault in this resource group and name it for example `s146d01-shared-kv`in region *West Europe* with *Standard pricing tier*.
Leave Networking defaults (public endpoint).

Repeat for each subscription (development, test, production).

## Developer Access
You could grant access in the [Access Policies](https://docs.microsoft.com/en-us/azure/key-vault/general/assign-access-policy?tabs=azure-portal) section
to yourself and other members of the team who you will allow to access the vault. Remember to grant minimum permissions; if they don’t need to edit, then don’t grant them write.

**A better solution** is to use a specific user role (using RBAC), which can be elevated via PIM to give access to secrets. This pattern is detailed on the [CIP documentation](https://docs.platform.education.gov.uk/docs/blogs/platform-engineering/key-vault-rbac.html)
and the implementation is explained below.

## Azure service Principal
To be able to retrieve the secrets from an external system like Github actions, you need an Azure Service Principal, which takes the form of an app registration in Azure AD.

See instructions [here](/infrastructure/hosting/azure-cip/#service-principal).

## Request roles
You will need to raise a request in Service Now to request roles for both the service principal and for the users to be able to manage the secrets.
The sample request may be used for all the subscriptions or one at a time.

### Sample Request
Create a request using the [CIP Request form](https://dfe.service-now.com/ithelpcentre?id=sc_cat_item&table=sc_cat_item&sys_id=51b0b9c5db1ff7809402e1aa4b96197d). Example for a new "s146-getintoteachingwebsite-Contributor and Key Vault editor" custom role:

```
Configure PIM access to Key Vault following the pattern in https://docs.platform.education.gov.uk/docs/blogs/platform-engineering/key-vault-rbac.html :

- Please create a new role with the name `s146-getintoteachingwebsite-Contributor and Key Vault editor` with the following roles:
    - `Contributor`
    - `Key Vault Certificates Officer`
    - `Key Vault Crypto Officer`
    - `Key Vault Secrets Officer`
- Configure PIM for the `s146-getintoteachingwebsite-Contributor-Delivery Team` user group to access this role

- Change `s146d01-shared-kv` Key Vault permission model to "Azure role-based access control"
- Change `s146t01-shared-kv` Key Vault permission model to "Azure role-based access control"
- Change `s146p01-shared-kv` Key Vault permission model to "Azure role-based access control"

- Please give `Key Vault Reader` and `Key Vault Secrets` roles to service principal `s146d01-keyvault-readonlyaccess` at subscription level in `s146-getintoteachingwebsite-development`.
- Please give `Key Vault Reader` and `Key Vault Secrets` roles to service principal `s146t01-keyvault-readonlyaccess` at subscription level in `s146-getintoteachingwebsite-test`.
- Please give `Key Vault Reader` and `Key Vault Secrets` roles to service principal `s146p01-keyvault-readonlyaccess` at subscription level in `s146-getintoteachingwebsite-production`.
```

## Access secrets from GitHub Actions
Login using the [service principal](/infrastructure/hosting/azure-cip/#github-actions) in the workflow.

The secrets can then be retrieved using the [Azure/get-keyvault-secrets](https://github.com/marketplace/actions/azure-key-vault-get-secrets) action.

## Access secrets from Terraform
Login using the [service principal](/infrastructure/hosting/azure-cip/#github-actions) in Terraform.

The secrets can then be retrieved using the [azurerm_key_vault](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/key_vault), [azurerm_key_vault_secrets](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/key_vault_secrets) and [azurerm_key_vault_secret](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/data-sources/key_vault_secret) data sources.
